define:
  type: rc/descriptor
  name: NGINX with ASAB Web UI distribution script
  url: https://nginx.org

descriptor:
  # TODO: docker.teskalabs.com/asab/asab-nginx 
  image: docker.teskalabs.com/lmio/distribution-nginx

  environment:
    ASAB_WEBUI_DISTRIBUTION_APP: lmio:v23.32-beta seacat-auth:v23.29-alpha  # TODO: This should be read from the library Site

  volumes:
    - "{{SITE}}/{{INSTANCE_ID}}/conf.d:/etc/nginx/conf.d:ro"
    - "{{SLOW_STORAGE}}/{{INSTANCE_ID}}/cache:/cache"
    - "{{SLOW_STORAGE}}/{{INSTANCE_ID}}/webroot:/webroot"
    - "{{SLOW_STORAGE}}/{{INSTANCE_ID}}/logs:/var/log/nginx"

  secrets:
    - "{{INSTANCE_ID}}--certificate.pem"
    - "{{INSTANCE_ID}}--private-key.pem"

  healthcheck:
    test: ["CMD", "service", "nginx", "status"]
    interval: 60s
    timeout: 10s
    retries: 5
    start_period: 10s

secrets:
  # Generated by the tech/nginx.py
  "{{INSTANCE_ID}}--certificate.pem":
    file: "{{SITE}}/{{INSTANCE_ID}}/secrets/certificate.pem"

  # Generated by the tech/nginx.py
  "{{INSTANCE_ID}}--private-key.pem":
    file: "{{SITE}}/{{INSTANCE_ID}}/secrets/private-key.pem"

files:
  # Top level nginx configuration common for all servers
  - "conf.d/default.conf": |
      include conf.d/parts/upstreams.conf;

  # HTTPS
  - "conf.d/https_default.conf": |
      server {
        listen 443 ssl http2 default_server;
        # TODO: listen [::]:443 ssl http2 default_server;

        server_name _;
        server_tokens off;

        ssl_certificate /run/secrets/{{INSTANCE_ID}}--certificate.pem;
        ssl_certificate_key /run/secrets/{{INSTANCE_ID}}--private-key.pem;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_session_timeout 1d;
        ssl_prefer_server_ciphers on;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        # Enable Gzip compression, mainly for a static content serving
        gzip on;
        gzip_vary on;
        gzip_min_length 10240;
        gzip_proxied expired no-cache no-store private auth;
        gzip_types text/plain text/css text/xml application/javascript application/octet-stream;
        gzip_disable "MSIE [1-6]\.";

        location / {
          gzip_static on; # Enable serving of pre-compressed gzip files
          root /webroot/lmio-webui/dist;
        }

        location /auth {
          gzip_static on; # Enable serving of pre-compressed gzip files
          alias /webroot/seacat-auth-webui/dist;
        }

        # SeaCat WebUI section
        location /seacat {
          gzip_static on; # Enable serving of pre-compressed gzip files
          alias /webroot/seacat-webui/dist;
        }

        location /config {
          root /webroot;
        }

        include conf.d/parts/instances.conf;
      }

  # HTTP
  - "conf.d/http_default.conf": |
      server {
        listen 80 default_server;
        # TODO: listen [::]:80 default_server;

        server_name _;
        server_tokens off;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        # ACME challenge is handled by a ASAB Remote Control
        location ~ ^/\.well-known/acme-challenge/([-_a-zA-Z0-9]+)$ {
          proxy_pass  http://asab-remote-control-public;
        }

        # Redirect everything to HTTPS
        return 301 https://$host$request_uri;
      }

  # The internal API Gateway
  - "conf.d/http_api.conf": |
      server {
        listen 8890;

        server_name _;
        server_tokens off;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        include conf.d/parts/instances.conf;
      }
