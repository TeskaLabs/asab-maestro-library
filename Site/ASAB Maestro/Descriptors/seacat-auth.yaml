define:
  type: rc/descriptor
  name: Seacat Auth
  url: https://github.com/TeskaLabs/seacat-auth
  tech: asab

descriptor:
  image: teskalabs/seacat-auth
  environment:
    # provisioning is skipped in automated deployments
    SEACAT_AUTH_PROVISIONING: 0
  volumes:
    - "{{SITE}}/{{INSTANCE_ID}}/conf:/conf:ro"
    - "{{FAST_STORAGE}}/{{INSTANCE_ID}}/data:/data"

sherpas:
# Sherpas containers: akin to their namesake mountain guides, these containers provide essential support and guidance throughout the application's lifecycle.
# provide a name to your sherpa and a descriptor for its very own container.
  mongo:
    image: library/mongo
    entrypoint: ["mongosh", "--nodb", "--file", "/script/mongo-insert.js"]
    command: ["echo", "DONE"]
    volumes:
    - "{{SITE}}/{{INSTANCE_ID}}/script:/script"
    environment:
      MONGO_HOSTNAMES: "{{MONGO_HOSTNAMES}}"

files:
  # By default, SMTP configuration is mocked - e-mails are printed into log of seacat-auth
  # Configuration of SMTP server should be done in UI > Maintenance > Configuration > General
  # TODO ^^ this is not possible now
  - "conf/seacatauth.conf": |
      [general]
      public_api_base_url={{LMIO_URL}}/auth/api
      auth_webui_base_url={{LMIO_URL}}/auth

      [asab:storage]
      type=mongodb
      mongodb_uri={{MONGODB_URI}}
      mongodb_database=auth
      aes_key=to_be_filled_in_by_remote_control

      [seacatauth:credentials:mongodb:default]
      mongodb_uri={{MONGODB_URI}}
      mongodb_database=auth
      tenants=yes
      register=no

      [seacatauth:communication:email:smtp]
      host=<mocked>

  - "script/mongo-insert.js"
  - "script/to_upload/"

api:
  public:
    port: 3081
    upstream: true
  private:
    port: 8900
    upstream: true

