# Works with v24.06-alpha10 and later

define:
  type: rc/descriptor
  name: Seacat Auth
  url: https://github.com/TeskaLabs/seacat-auth

params:
  SEACAT_AUTH_PRIVATE: "http://seacat-auth:8900"
  SEACAT_AUTH_PUBLIC: "http://seacat-auth:3081"

descriptor:
  image: teskalabs/seacat-auth
  
  environment:
    # provisioning is skipped in automated deployments
    SEACAT_AUTH_PROVISIONING: 0

  volumes:
    - "{{SITE}}/{{INSTANCE_ID}}/conf:/conf:ro"
    - "{{FAST_STORAGE}}/{{INSTANCE_ID}}/data:/data"

sherpas:
# Sherpas containers: akin to their namesake mountain guides, these containers provide essential support and guidance throughout the application's lifecycle.
# provide a name to your sherpa and a descriptor for its very own container.
  mongo:
    image: library/mongo:{{ VERSIONS["mongo"] }}
    entrypoint: ["mongosh", "--nodb", "--file", "/script/mongo-insert.js"]
    command: ["echo", "DONE"]
    volumes:
    - "{{SITE}}/{{INSTANCE_ID}}/script:/script"
    environment:
      MONGO_HOSTNAMES: "{{MONGO_HOSTNAMES}}"

asab:
  configname: conf/seacatauth.conf
  config:
    general:
      public_url: "{{PUBLIC_URL}}"

    seacatauth:
      private_key: /conf/private-key.pem  # The private file key will be added by ASAB Remote Control / SeaCat Auth tech

    mongo:
      database: auth

    asab:storage:
      type: mongodb
      aes_key: null  # Will be filled by ASAB Remote Control

    seacatauth:credentials:mongodb:default:
      tenants: yes
      registration: yes

    seacatauth:credentials:m2m:machine: {}

    seacatauth:communication:email:iris:
      url: http://asab-iris:8896

asab-config:
  Tenants:
    __schema__:
      file: 
        {
          "$id": "Tenants schema",
          "type": "object",
          "title": "Tenants",
          "description": "Configure tenant data",
          "default": {},
          "examples": [
            {
              "General": {
                "schema": "/Schemas/ECS.yaml",
                "timezone": "Europe/Prague"
              }
            }
          ],
          "required": [],
          "properties": {
            "General": {
              "type": "object",
              "title": "General tenant configuration",
              "description": "Tenant-specific data",
              "default": {},
              "required": ["schema", "timezone"],
              "properties": {
                "schema": {
                            "type": "string",
                            "title": "Schema",
                            "description": "Absolute path to schema in the Library",
                            "default": "/Schemas/ECS.yaml",
                            "enum": [
                                "/Schemas/ECS.yaml",
                                "/Schemas/CEF.yaml"
                            ],
                            "$defs": {
                                "select": {
                                    "type": "string"
                                }
                            },
                            "examples": [
                                "/Schemas/ECS.yaml"
                            ]
                        },
                "timezone": {
                  "type": "string",
                  "title": "Timezone",
                  "description": "Timezone identifier, e.g. Europe/Prague",
                  "default": "",
                  "examples": [
                    "Europe/Prague"
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        }
    system:
      file: {"General": {"schema": "/Schemas/ECS.yaml", "timezone": "Europe/Prague"}}
      if_not_exists: true

nginx:

  api: 8900  # The REST API (private) is at tcp/8900

  upstreams:
    # Public Auth API at tcp/3081
    upstream-seacat-auth-public: 3081
    upstream-seacat-auth-private: 8900

  proxy_caches:
    oauth2_introspect: keys_zone=oauth2_introspect:1m max_size=2m

  https:

    location = /_oauth2_introspect:
      - internal
      - proxy_method POST
      - proxy_set_body "$http_authorization"
      - proxy_pass http://upstream-seacat-auth-private/nginx/introspect/openidconnect
      - proxy_set_header X-Request-URI "$scheme://$host$request_uri"
      - proxy_ignore_headers Cache-Control Expires Set-Cookie

      # The cache for introspection requests, reduces the load on the SeaCat Auth API
      - proxy_cache oauth2_introspect
      - proxy_cache_key "$http_authorization $http_sec_websocket_protocol"
      - proxy_cache_lock on
      - proxy_cache_valid 200 30s

      # Increase buffer size to fit large Authorization headers
      - proxy_buffer_size         32k
      - proxy_buffers           8 64k
      - proxy_busy_buffers_size   64k

    location /api/openidconnect:
      - rewrite ^/api/openidconnect/(.*) /openidconnect/$1 break
      - proxy_pass http://upstream-seacat-auth-public

    # This is an landing point for a cookie-based authorization
    location = /api/cookie-entry:
      - proxy_pass http://upstream-seacat-auth-public/cookie/entry
      - proxy_ignore_headers Cache-Control Expires Set-Cookie

    location /auth/api/seacat-auth/public:
      - rewrite ^/auth/api/seacat-auth/(.*) /$1 break
      - proxy_pass http://upstream-seacat-auth-public

    location /auth/api/openidconnect:
      - rewrite ^/auth/api/openidconnect/(.*) /openidconnect/$1 break
      - proxy_pass http://upstream-seacat-auth-public


files:
  - "script/"
