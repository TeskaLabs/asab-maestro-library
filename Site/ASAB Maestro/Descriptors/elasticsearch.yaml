define:
  type: rc/descriptor
  name: Elasticsearch
  url: https://www.elastic.co/products/elasticsearch

descriptor:

  image: library/elasticsearch

  # Elasticsearch changes owner to 1000 by default. ASAB Governator creates folders to be mounted as volumes and chowns them to 1000 as well.
  # TODO: There is a collision with user 1000 - ubuntu user, zookeeper
  user:
    1000:1000

  volumes:
    # - null:/usr/share/elasticsearch/data  # This will be added by Elasticsearch tech
    - "{{SLOW_STORAGE}}/elasticsearch/{{INSTANCE_ID}}/logs:/usr/share/elasticsearch/logs"
    # A directory with certificate 
    - "{{SITE}}/{{INSTANCE_ID}}/certs:/usr/share/elasticsearch/config/certs:ro"

  environment:
    network.host: "{{NODE_ID}}"
    # TODO: Rack awareness - node.attr.rack_id=lm11
    node.name: "{{INSTANCE_ID}}"
    node.roles: null  # Filled in by the remote control basted on the elasticsearch/role specificied in the model
    cluster.name: asab-es  # TODO: Eventually from the model / global configuration
    discovery.seed_hosts: null # Filled in by the Remote Control (ie "lm11:9300,lm12:9300")
    cluster.initial_master_nodes: null # Filled in by the Remote Control (ie elasticsearch-master-1,elasticsearch-master-2)
    http.port: null  # Filled in by the Remote Control (ie 9200)
    transport.port: null  # Filled in by the Remote Control (ie 9300); 

    ES_JAVA_OPTS: null  # Remote Control sets by default "-Xms2g -Xmx2g" for master node and "-Xms28g -Xmx28g" for data nodes
    ELASTIC_PASSWORD: null  # Will be filled by the Elasticsearch tech

    xpack.security.enabled: true
    xpack.security.transport.ssl.enabled: true
    xpack.security.transport.ssl.verification_mode: certificate
    xpack.security.transport.ssl.certificate_authorities: certs/ca.pem
    xpack.security.transport.ssl.certificate: certs/certificate.pem
    xpack.security.transport.ssl.key: certs/key.pem


nginx:
  proxy_caches:
    elasticsearch_introspection_cache: keys_zone=elasticsearch_introspection_cache:1m max_size=2m

  https:
    location /api/elasticsearch/:
      - auth_request /_elasticsearch_introspect
      - auth_request_set $batman $upstream_http_authorization
      - proxy_set_header Authorization $batman

      # The timeout for ES request handling is set to 10 mins to avoid "Failed to get data from Elasticsearch" message in UI
      - proxy_connect_timeout 600
      - proxy_send_timeout 600
      - proxy_read_timeout 600
      - send_timeout 600

      - auth_request_set $cookie $upstream_http_cookie
      - proxy_set_header Cookie $cookie

      - rewrite ^/api/elasticsearch/(.*) /$1 break
      - proxy_set_header Host $host
      - proxy_set_header Connection "Keep-Alive"
      - proxy_set_header Proxy-Connection "Keep-Alive"
      - proxy_pass http://elasticsearch  # upstream created by remote control technology - it leads to master

    location /_elasticsearch_introspect:
    - internal
    - proxy_method POST
    - proxy_set_body ""
    - proxy_set_header X-Request-URI "request_uri"
    - proxy_cache elasticsearch_introspection_cache
    - proxy_pass http://upstream-seacat-auth-private/nginx/introspect/batman?client_id=elasticsearch
    - proxy_cache_key $http_authorization
    - proxy_cache_lock on
    - proxy_cache_valid 200 10s
    - proxy_ignore_headers Cache-Control Expires Set-Cookie

    # Increase buffer size to fit large Authorization headers
    - proxy_buffer_size         32k
    - proxy_buffers           8 64k
    - proxy_busy_buffers_size   64k


files:
  - service://seacat-auth/script/to_upload/elasticsearch/cl.json: |
      [{
        "_id": "elasticsearch",
        "application_type": "api",
        "authorize_anonymous_users": false,
        "client_name": "Elasticsearch",
        "code_challenge_method": "none",
        "grant_types": [
          "authorization_code"
        ],
        "redirect_uri_validation_method": "prefix_match",
        "redirect_uris": [
          "{{PUBLIC_URL}}/api/elasticsearch"
        ],
        "response_types": [
          "code"
        ],
        "token_endpoint_auth_method": "none",
        "cookie_entry_uri": "{{PUBLIC_URL}}/api/cookie-entry",
        "client_uri": "{{PUBLIC_URL}}/api/elasticsearch"
      }]

telegraf: |
  [[inputs.elasticsearch]]
    servers = {{ELASTIC_HOSTS_AUTHORIZED}}
    http_timeout = "9s"
    local = false
    cluster_health = true
    cluster_health_level = "indices"
    cluster_stats = true
  
  [[processors.rename]]
    namepass = ["elasticsearch*"]
    [[processors.rename.replace]]
      tag = "node_id"
      dest = "elasticsearch_node_id"
