define:
  type: rc/descriptor
  name: Hello world  # You can name the descriptor as you need. Just keep in mind the file name of the descriptor must be the same as service name used in the model.

descriptor:
  image: alpine
  command: sh -c "echo 'Hello, world!'; tail -f /dev/null"
  environment:
  # you must use "dictionary" way of writing the env variables, not list
    ASAB_ZOOKEEPER_SERVERS: "{{ZOOKEEPER_SERVERS}}"
  volumes:
  - "{{SITE}}/{{INSTANCE_ID}}/conf:/conf"

  # Here you can type anything that is allowed in docker-compose.yaml within the service specification.

sherpas:
# Sherpas containers: akin to their namesake mountain guides, these containers provide essential support and guidance throughout the application's lifecycle.
# provide a name to your sherpa and a descriptor parts overwriting the main descriptor
  init:
    command: ["echo", "DONE"]  # i.e.

files:
# File paths are gonna be applied to /Site/<app_name>/Files/<service_id>/<your file as you declare it>
# Being used in the docker-compose file as a volume, the /Site/<app_name>/Files/<service_id> part of path is substituted by {{SITE}}/{{INSTANCE_ID}}/
# There are three ways of declaring files used as container volumes
# - directly in this yaml declaration - keep it as key:value pair where value is the file content
# - using a whole directory as /Site/<app_name>/Files/<service_id>/some_directory/ - keep trailing slash in this case
# - use specific file as /Site/<app_name>/Files/<service_id>/some_file.json
# Please keep in mind you work in 3 stages:
# - you specify the file here
# - it becomes part of a site directory
# - it gets mounted into a container

  - "conf/hello_world.conf": |
      net:
        port: 8888

api:
  # this configuration part serves to create nginx configuration
  # see https://docs.teskalabs.com/logman.io/reference/network-ports/
  private:
    port: 0000
    upstream: true
  

