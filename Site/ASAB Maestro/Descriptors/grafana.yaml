define:
  type: rc/descriptor
  name: Grafana
  url: https://github.com/grafana/grafana

descriptor:
  image: grafana/grafana

  user: "10003:10003"

  volumes:
    - "{{SLOW_STORAGE}}/{{INSTANCE_ID}}/data:/var/lib/grafana"
    - "{{SITE}}/{{INSTANCE_ID}}/provisioning:/etc/grafana/provisioning"

  environment:
    GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
    GF_SERVER_FROM_SUB_PATH: true
    GF_ALLOW_EMBEDDING: true
    GF_SECURITY_ALLOW_EMBEDDING: true
    GF_COOKIE_SAMESITE: disabled
    GF_SECURITY_COOKIE_SAMESITE: disabled
    GF_SECURITY_ADMIN_USER: grafana_admin
    GF_SECURITY_ADMIN_PASSWORD: "{{GRAFANA_PASSWORD}}"

files:
  - "provisioning/"

nginx:
  upstreams:
    upstream-grafana: 3000

  # https:
  #    location /grafana:
  #     - rewrite ^/grafana/(.*) /$1 break
  #     - proxy_pass http://upstream-grafana
  #     - proxy_set_header Host $host

  proxy_caches:
    grafana: keys_zone=grafana:1m max_size=2m
  https:
    location /grafana:
    - auth_request /_grafana_introspect
    - auth_request_set $batman $upstream_http_authorization
    - proxy_set_header Authorization $batman

    # - auth_request_set $cookie $upstream_http_cookie
    # - proxy_set_header Cookie $cookie

    - rewrite ^/grafana/(.*) /$1 break
    - proxy_pass http://upstream-grafana
    - proxy_set_header Host $host
    # - proxy_redirect off
    # - proxy_buffering off

    # - proxy_cache_bypass $http_upgrade

    - error_page 401 /auth/api/openidconnect/authorize?response_type=code&scope=cookie%20batman&client_id=grafana&redirect_uri={{PUBLIC_URL}}$request_uri
    - error_page 403 /auth


    location /_grafana_introspect:
    - internal
    - proxy_method POST
    - proxy_set_body ""
    - proxy_set_header X-Request-URI "request_uri"
    - proxy_cache grafana
    - proxy_pass http://upstream-seacat-auth-private/nginx/introspect/batman?client_id=grafana
    - proxy_cache_key $cookie_SeaCatSCI_ZLHESG3JKVPI2D3X  # This is a cookie paired to the grafana client - it contains hashed client_id - this is based on SeaCat Auth requirements.
    - proxy_cache_lock on
    - proxy_cache_valid 200 10s
    - proxy_ignore_headers Cache-Control Expires Set-Cookie


# TODO: Automated InfluxDB connector configuration

asab-config:
  Tools:
     Grafana: 
        file: asab-config/Tools/Grafana.json
        if_not_exists: true

seacat-auth:
  config:
    "batman:grafana":
      url: "http://{{NODE_ID}}:3000"
      username: grafana_admin
      password: "{{GRAFANA_PASSWORD}}"
  content:
  - "cl.json": |
      [{
        "_id": "grafana",
        "application_type": "web",
        "authorize_anonymous_users": false,
        "client_name": "Grafana",
        "code_challenge_method": "none",
        "grant_types": [
          "authorization_code"
        ],
        "redirect_uri_validation_method": "prefix_match",
        "redirect_uris": [
          "{{PUBLIC_URL}}/grafana"
        ],
        "response_types": [
          "code"
        ],
        "token_endpoint_auth_method": "none",
        "cookie_entry_uri": "{{PUBLIC_URL}}/api/cookie-entry",
        "client_uri": "{{PUBLIC_URL}}/grafana"
      }]

